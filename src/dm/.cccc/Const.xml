<?xml version="1.0" encoding="utf-8"?>
<!--Detailed report on module Const-->
<CCCC_Project>
<module_summary>
<lines_of_code value="135" level="0" />
<lines_of_code_per_member_function value="******" level="0" />
<McCabes_cyclomatic_complexity value="6" level="0" />
<McCabes_cyclomatic_complexity_per_member_function value="******" level="2" />
<lines_of_code value="99" level="0" />
<lines_of_code_per_member_function value="********" level="2" />
<lines_of_code_per_line_of_comment value="1.364" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="0.061" level="0" />
<weighted_methods_per_class_unity value="8" level="0" />
<weighted_methods_per_class_visibility value="2" level="0" />
<depth_of_inheritance_tree value="0" level="0" />
<number_of_children value="0" level="0" />
<coupling_between_objects value="4" level="0" />
<IF4 value="0" level="0" />
<IF4_per_member_function value="********" level="0" />
<IF4_visible value="0" level="0" />
<IF4_visible_per_member_function value="********" level="0" />
<IF4_concrete value="0" level="0" />
<IF4_concrete_per_member_function value="********" level="0" />
</module_summary>
<module_detail>
<description>definition</description>
<source_reference file="Const.h" line="43" />
<lines_of_code value="96" level="1" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="99" level="0" />
<lines_of_code_per_line_of_comment value="0.970" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</module_detail>
<procedural_detail>
<member_function>
<name>Const()</name>
<extent>
<description>definition</description>
<source_reference file="Const.cpp" line="133" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="Const.h" line="45" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>concat(const TYPE1 &amp;,const TYPE2 &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Const.h" line="62" />
</extent>
<lines_of_code value="7" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>concat(const TYPE1 &amp;,const string &amp;,const TYPE2 &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Const.h" line="72" />
</extent>
<lines_of_code value="8" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>toInt(const TYPE &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Const.h" line="44" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>toString(const TYPE &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Const.h" line="54" />
</extent>
<lines_of_code value="5" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>toUInt64(const TYPE &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Const.h" line="49" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>trim(const string &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Const.h" line="83" />
</extent>
<lines_of_code value="7" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>~Const()</name>
<extent>
<description>definition</description>
<source_reference file="Const.cpp" line="136" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="Const.h" line="46" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
</procedural_detail>
<structural_detail>
<module>
<name>Const</name>
<client_module>
</client_module>
<supplier_module>
<name>TYPE</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="44" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="49" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="54" />
</extent>
<name>TYPE1</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="62" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="72" />
</extent>
<name>TYPE2</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="63" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="73" />
</extent>
<name>string</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="73" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Const.h" line="83" />
</extent>
</supplier_module>
</module>
</structural_detail>
</CCCC_Project>
